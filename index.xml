<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shawn New Blog</title>
    <link>//liushengxian.github.io/</link>
    <description>Recent content on Shawn New Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Feb 2023 00:00:14 +0800</lastBuildDate><atom:link href="//liushengxian.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Monaco Editor的一些问题记录</title>
      <link>//liushengxian.github.io/posts/monaco-editor-problems/</link>
      <pubDate>Tue, 07 Feb 2023 00:00:14 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/monaco-editor-problems/</guid>
      <description>上周末开始老薛开始呼叫支援，他的项目里的monaco-editor在升级的时候遭遇问题，结果TypeScript编译过程报错了。
周末那天因为仓促接到需求，在node@18 + webpack@5 下面搭建了一次monaco-editor和monaco-languageclient。项目代码是能跑过编译的。就把项目代码post到GitHub上，算是草草交差了。
https://github.com/liushengxian/monaco-client-webpack-test
但是今天又接到消息。他测试后发现，node 12下也还是行不通的。node 18却根本不需要安装monaco-vscode-api都可以通过编译。
https://github.com/CraigMeng/monaco-webpack-node-12
于是乎，今天花了两小时一起debug。最终也没get到解决方案。但是发现了一些小区别：
比如：https://github.com/nodejs/node/pull/29978
node到13.2才开始支持条件式导出。
最后我们定位到的问题是，vscode/services找不到这个定义。然而这个定义是在一个虚假的vscode包里。因为我们用package.json里定义的vscode是
{ &amp;#34;vscode&amp;#34;: &amp;#34;npm:@codingame/monaco-vscode-api@^1.69.17&amp;#34;, } 然而在我将node版本升级到13，14的时候，项目却依然报同样的错。甚至于升级到18的时候，dev-server直接挂掉了。最后没有办法，我们只能给monaco-languageclient提了一个issue： https://github.com/TypeFox/monaco-languageclient/issues/458
虽然可能于事无补，毕竟老薛这个repo的node版本已经太旧了。</description>
    </item>
    
    <item>
      <title>博客重开暨2022年度总结</title>
      <link>//liushengxian.github.io/posts/my-first-post/</link>
      <pubDate>Wed, 01 Feb 2023 02:31:37 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/my-first-post/</guid>
      <description>翻了翻自己blog，发现最近的一篇还是2020年11月的了。不得不叹息时光如梭，两年就这么过去了。
甚至连当时还挺火的这个Hugo的blog生成器都感觉快凉了。自己用的主题都没人维护了。（什么？让我自己去维护一个？哪有时间呀～）
2022年的最重要的事情就是找到老婆了～
上半年的疫情袭击，在家封控了两个多月。
年中突发状况遭遇裁员。
塞翁失马，焉知非福。在待业期间遇到了女朋友。
后面的半年时间过的飞快。一转眼我们都在一起五个多月了。
今年希望能事事顺意！</description>
    </item>
    
    <item>
      <title>记录工作中遇到的两个bug</title>
      <link>//liushengxian.github.io/posts/two-bugs-in-work/</link>
      <pubDate>Wed, 11 Nov 2020 01:23:08 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/two-bugs-in-work/</guid>
      <description>很久没有写blog了。这次在工作中遇到两个bug，更新一下。
生产环境与开发环境不一致的问题 在上线几个新功能之后，突然QA反馈线上的某个页面的switch按钮不见了。当然，因为程序具有默认行为，所以这几个按钮不见倒也没有太多的用户反馈。
因为可能在用户看来这个页面本来就是不能做更多控制的。所以我有足够的时间来找出问题的所在。
在尝试了多次改动之后，发现这个switch按钮在开发环境&amp;amp;测试环境都能看到。但是一到了beta环境或者线上生产环境之后，就还是莫名其妙的失踪了。在线上的console里面甚至看不到任何有用的报错信息。。只有一个奇怪的没有任何提示的红色Error。
用Chrome的console指针点击页面后，发现按钮组件的dom根本没有生成，而是一个类似于v-if=&amp;ldquo;false&amp;quot;情况下的
&amp;lt;!-- --&amp;gt; 我开始怀疑是否组件没有正确传入参数，并尝试了几次修改控制组件展示的变量，但是都没有成功，仍旧是在开发环境生龙活虎，在线上、beta消失不见。
在咨询浩洋哥之后，他提出可以让运维看一下是否发布了正确的版本。
但是我对比了自己push上去的代码的hash值与CI中build的hash值，却是一样的，说明发布环境没有什么问题。
就在我百思不得其解的时候，我在beta环境上看到了一个错误提示。应该也就是线上那个被过滤掉的错误提示信息。
大概意思是说，true不能作为值 赋值给onClick。
恍然大悟，想到自己在这个组件里看到的on={true}这个选项。意识到这里的on被某个插件（怀疑是升级过后的babel插件、或者typescript插件）自动识别成了onClick。然后将布尔值赋给onClick，自然会无法赋值成功，然后导致运行时错误，dom也就无法顺利渲染出来了。
将on这个属性改为switch之后，上beta，果然，问题解决了。
启发 首先这个坑是前面人留下来的，用on来作为一个标志记录组件的状态属实是有些问题的。一般朋友命名时应该都不会用这么简单的名称来写到dom属性上面去吧。
其次，对我的启发是，自己对代码打包过程的理解还是不足的。如果能够知道每个依赖都做了什么的话，也许在一开始从线上/线下环境不一致就应该考虑到是打包工具的问题。继而寻找代码中有哪些地方做的不够规范。
vue-router中replace方法失效的问题 第二个问题更加让人头疼。搞了一天才总算搞定。
当前负责的这个项目中，vue-router的replace方法莫名失效了。结果导致在很多机型上面，操作应用之后各种页面都push进history栈当中。在返回的时候，会有很多之前的页面，返回半天才能返回到应用的入口。
前面的项目负责人为了解决这个问题，在程序中用了hack的方法，监听页面左上角的返回按钮，在返回到首页的时候，点击返回按钮直接关闭应用。而我也做了一个优化，就是用客户端同事提供的sdk，监听了返回事件，进行页面的跳转。
但是这个方法也有其无法处理的问题。就是在iOS的机型上面，左滑返回上一页是不在返回事件控制的范畴之内的。导致在iOS上面左滑很多次都有奇怪的页面，很多次才能退出应用。当然一直使用push也会导致应用算占据的内存不断膨胀，也许在操作多次之后就会crash（未验证是否keep-alive会有助于解决这个情况）
所以我就着手开始解决这个问题。
其实问题一开始发现也是QA这边发现的，反馈的问题是我们上线新代码之后频繁出现了这个问题（这个问题QA同学一直有遇到过，但是这几次上线之后特别频繁，稳定复现）。
第一个发现的问题就是，在应用首页多个tab中，之前的开发使用了$router.replace()来记录首页多个tab的变化。当我把这个$router.replace()去掉之后，应用正常切换tab，且观察到浏览器当中的history栈不再增加。
理论上使用replace来做这种事情是没有问题的。但是在这个replace不生效，莫名变成push的情况下，就变得很糟糕。可以通过快速点击首页的tab实现生成爆炸长度的history。
当我搜索项目后，发现这个replace主要是提供了一个新的query，叫做tabIndex的值，给另外仅有的一个地方使用。这就让我很放心了，其实这种在app内的应用，完全可以不需要这种地址，反正每次进入都是首页，而且切换tab的事情完全可以放到vuex当中存储。没必要放到路由当中，如果实在不行，就把首页的这个replace撤掉，然后改写一下那仅有的一个地方好了。
但是问题没有那么简单，虽然这个tabIndex只有一个地方使用，但使用$router.replace()的地方可不止一处，而且很多地方都是不可替换的。
那么我们继续调查为什么这个router.replace()失败了呢。当我回归到vue-router的文档时，发现replace方法的第二个、第三个参数可以分别设置为replace成功与失败的回调。当然也可以不设置，这样replace返回的是一个promise，可以使用then，catch语句进行捕获结果/错误。
心想这样总可以找到问题了吧。然后用了回调&amp;amp;catch语句发现，的确是跳转路由失败了，但却没有返回值。（笔者用的vue-router版本不是最新的，最新的代码已经添加了这个报错信息）
返回的报错值是undefined，就很让人头大，不知道问题出在哪里。
尝试了一下replaceState方法，发现在使用这个方法的时候，能够正确地更新history历史。实在不行我就把所有的$router.replace()都替换成history.replaceState()吧。我这么想着。
回头去看vue-router的文档，发现有一个replace选项，甚至在网上查到尤大在0.x版本的github issue上面跟网友探讨是否replace的默认值设置为true会更好一些。抱着试一试的心态我给项目中所有replace方法添加了replace： true。
果不其然，没有任何用处。
没办法，只能硬着头皮去看vue-router的源码了。使用debugger开始单步调试，看了大半天，也没发现什么问题。看到不知道几层的代码逻辑之后，连自己也绕晕了。不想再读下去了。
心想，难道真的升级下vue-router的版本就可以了？于是自己抱着怀疑的态度，去随便搜索了一个公司内的其他项目，确认了代码中也使用了replace方法，然后发现不论是公司的脚手架，还是vue-router的版本，都是一样的。
果然，问题不出在vue-router或者脚手架的版本上面。前面已经翻过脚手架的CHANGELOG，根本没有发现有什么修复vue-router相关的问题。在网上搜索也找不到相同的情况。
只好无奈地继续翻vue-router的源码，单步调试看问题出在哪里。嗯，，vue-router最后会生成一个队列，然后把所有钩子函数都执行一遍，然后跳到了一个方法当中去，根据这个方法中的to.replace来看是需要使用push还是replace方法。等等。。？这个to是哪里来的？不是replace方法中的replace选项，那是哪里来的？看着单步调试中，栈在处理完队列的时候，history的长度又增加了1，就觉得莫名忧伤。
就在这时，我找不到原因的时候，又看到了自己之前尝试的replaceState()的代码，在浏览器中尝试，突然发现自己页面上面虽然能够跳转成功，但是页面的query中携带的用户信息&amp;amp;其他query都不见了。
这就让我想起之前看到的项目中，两年前项目开始的时候就已经添加上的那个写给vue的插件了。这个插件添加了一个beforeRoute钩子，在钩子中，保留了需要保存的query信息。我想如果要用replaceState来做的话，也要看下怎么兼容这个方案吧。
打开plugin的文件的时候，突然一道灵光闪过，我意识到问题所在了。
！！！！！！
就是这个plugin在它的钩子里使用next()方法修改url的时候，没有使用replace参数！导致每次$router.replace()都会新增一个页面到history栈当中去！
在给next方法添加了replace：true选项之后，反复试了几次，发现果然history在$router.replace()的时候不再增加了。
我解决了一个两年前的bug！
启发 谁也不曾想到，这个问题居然会是这样引起的。
反思自己一步步来debug的过程，可以看到自己对vue-router的原理一步步加深，但是还是没有完全吃透。
所以，还是努力把vue-router的源码搞清楚吧。这样再次遇到类似的问题时候，就会更快定位到问题所在。
再一个启发就是，vue-router已经经历了社区的验证，其实不需要花费过多时间在找它的问题上面，而应该将问题聚焦于自己的业务代码上面。毕竟其他使用vue-router的项目，都没有遇到这个奇葩的问题。所以问题更大可能性是出在我们自己的业务代码/项目自有的框架上面。
最后 晚安！ 好好休息，保持好状态，不要过分熬夜！就算进度赶不上，也不要太过着急了！</description>
    </item>
    
    <item>
      <title>《无双》观后感</title>
      <link>//liushengxian.github.io/posts/project_gutenburg/</link>
      <pubDate>Sun, 14 Oct 2018 18:17:30 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/project_gutenburg/</guid>
      <description>昨天跟果果一起约好了小聚一下，翻了翻最近档期的电影，发现只有《无双》的评分还是蛮高的，于是下午就一起欣赏了一波。
可以说，这是一部高智商犯罪片。作为男主角的“画家”（也即李问），以及作为女主角的秀清，可以说都是智商超高的人物。让我想起的另一个角色就是《越狱》里的Micheal Scofield。画家有着制造伪钞的技术，搞清楚了所有的技术难点，有着超强的记忆力和绘画水平，以及超一流的编剧、表演水平。想想自己的水平，高智商犯罪，算了还是好好当老实人吧。真的存在这样的人的话，那可真是我完全没法想象的生活。
P.S. 当时怎么自己没有选择印钞相关的专业呢。
讲故事一开始的时候我就在想，这大概是第二代或者第三代华人吧？要是刚搬过去的留学生，大概率家里条件不会这么差，而且学艺术的话，我觉得在西方应该大概率都是富有阶级才能够去做的事情。至少在中国，上一代从饥饿的时代过来，不会去冒险做这种事。（果然，全是李问编的）
片子中场的时候，我想到，这都回忆了快一个小时了。怎么还没去抓呢？到五点钟就散场了，还不到一小时，要是去抓画家，时间也太紧凑了吧？
所以让人惊喜的，真的在最后二十分钟，故事剧情峰回路转。我们发现之前的很多都是李问假造或者改造的故事。
难道李问就这么跑了？戏耍了日常没用的警察，然后保释成功出来了？不行，这不符合社会主义核心价值观。所以最后，还是有那么一出爆炸。
这却也是人物性格的悲剧。就算从卑微的人物成为叱咤风云的伪钞罪犯。自身的那些缺点却从来没有改变过。最后几个送命题，耿直的回答，真的是让李问送了命。站在男人角度想，千万不要KY（读不懂氛围），尤其是那些关键时刻。但是从秀清的角度来想，有这么样的回答，也真是绝望。最后的选择，也真是最好的结局。
到最后，警察到大西北找到真正的阮文的时候。一句，“他是我那个时候的邻居”，让人觉得辛酸不已。作为一个有过类似心理感受的人而言，可以说是秒懂了李问的心思。却不得不说，这种偏执，我是做不到的。回忆里一直对他吼着，要做一百万个人里的主角的那个“发哥”，其实只是自己被压抑、被鑫叔说只能做小角色的反抗。“放弃爱情的男人，什么事情都做不成。”我从心底里是佩服这句话的。但是到最后，其实阮文根本没有认识过这个男人。这是多么卑微的爱慕啊。如果换做是我，也许，不，我一定会放弃这个。所谓“重温旧梦就是破坏旧梦”，不如就让那美好的想象一直存在于自己的心里好了，甚至是忘掉。
而李问的绰号为什么叫画家？李问从来不是一个画家，而阮文是。
让我觉得好奇的是，是什么让他追逐成为主角？那种偏执，在我身上可以说是没有。那种在球场上追求胜利、在技术上追求极致的精神，也是被我舍弃掉了。我没有这种偏执，却十分能理解他们。这是李问之所以能成为李问的关键要素，却也是他始终不能放下，好好享受生活的根源。
我想，能够成为这样的英雄，也不错了。
而我的朋友们，我们还是好好珍惜眼下的幸福，一起欢笑，一起潇潇洒洒地生活吧。</description>
    </item>
    
    <item>
      <title>拯救你的ubuntu</title>
      <link>//liushengxian.github.io/posts/save_you_linux_system/</link>
      <pubDate>Thu, 08 Mar 2018 11:19:14 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/save_you_linux_system/</guid>
      <description>在给大金鱼的ubuntu添加gulp相关的环境变量时候，因为看了不正确的教程。把/opt/profile里的内容修改了，导致无法进入系统。登录界面输入正确密码反复卡在登录界面。
折腾了许久，发现了解决方案： 在启动系统的时候长按shift，进入Linux的Recovery Mode，但是，这个mode下面却无法修改文件。在grub选择Recovery Mode的时候按E，编辑启动文件来修改启动方式。
将 ro recovery nomodeset 改为 rw single init=/bin/bash
参考资料：recovery mode</description>
    </item>
    
    <item>
      <title>再见我的2017年</title>
      <link>//liushengxian.github.io/posts/saygoodbye_2017/</link>
      <pubDate>Wed, 27 Dec 2017 23:47:07 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/saygoodbye_2017/</guid>
      <description>通常来说，都认为人在本命年会过得比较坎坷一些。(至少某人是这么认为的吧。)
再见我的2017 甚至有些平淡地不够真实。
我想我的问题还是在于有的时候没有去考虑，不自觉地在逃避某些东西。
有些东西，其实自己知道应该要做什么。但是当有时间的时候，却麻木————或者，我也找不到太好的词————不太想做事情。
每个人都有自己的苦恼。
恐惧 仔细思考下，觉得自己仿佛一直都只是在原地徘徊。从大二下挂科开始，之后虽然自己再也没有挂科，可是却再也没有进入状态。那种巅峰体验，退潮了。我已经很久没有体验过了。其实在玩游戏的时候偶尔有体验过。
有时候很害怕，因为自己的未来。假使自己是努力，尽力还是不能达到某种程度。那好像。。好像也是另一种伤心。但是，目前对我来说，比现在给我带来的这种体验，也许会好一些吧？
做得好 细数自己做的好的方面，好像都没有什么。就拿游戏方面来说，我好像玩的蛮多的，但是都没有那么好。LOL，也就黄金守门员的水平。DNF，早就弃坑了。炉石传说，冲冲钱在20级虐虐小朋友，传说，不存在的，竞技场更是经常2-3胜出局。王者荣耀倒是，玩了快400把终于上了个钻石。这个游戏钻石水分很大就不用说了。射击类游戏，玩的蛮多的，就不用多说了，玩不了。那些氪或者肝的，对不起，玩不起。什么崩坏2，舰N。LoveLive的，也就刷刷hard难度的，当一条咸鱼了。
完 这边文章写的时候心里有点潮湿，但是写着写着也觉得释然了。文章没有写完，但是到现在，已经没有要继续这个话题写下去的想法了。说完了。
关于生病 最近我养的猴子生病了。已经歇了三天。</description>
    </item>
    
    <item>
      <title>配置我的工作项目</title>
      <link>//liushengxian.github.io/posts/my_way_to_config_work_project/</link>
      <pubDate>Thu, 04 May 2017 23:49:00 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/my_way_to_config_work_project/</guid>
      <description>配置工作项目的过程 鶸米一共花了整整三天晚上才把环境配好。期间记录了自己到底干了什么。下面梳理下配置流程。
Day 1 0.安装Mint。用公司的那个安装盘安装的。然后参考[这里][ref-1]。 [ref-1]: http://blog.csdn.net/albertjone/article/details/54633747
1.download netease music for linux; 下载网易云音乐。没有小姐姐的歌声自己在这里折腾系统简直熬不下去。【手动滑稽】
2.download hardware from startup panel; 因为下载了播放器但还是没有声音。很郁闷，所以尝试装下驱动。然而并没有什么卵用。
3.sudo apt-get update/sudo apt-get upgrade [upgrade is breaking here.] 按照上面那个链接里的文章，尝试这两个命令。前面的OK了 但是upgrade总是会中断。
4.download chrome for linux; wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo gdebi google-chrome-stable_current_amd64.deb 下载Chrome浏览器。Linux上的Firefox有时候跟Windows的IE的命运是一样的。
5.no sound: changing into the back plug.(Mint 18)(Someone told me to upgrade linux kernel!) 还是没有声音，但是调了半天之后发现都没有问题。后来我把耳机从前面的孔插到后面的孔就好了【=。=】
6.install git. 安装Git。
7.generate my ssh-key for github. 生成本机的SSH-KEY。多台机器其实可以使用相同的KEY。但是这里还是新生成了。
8.download shadowsocks-qt5. 装了半天想要google下一些问题 但是发现没有翻墙。于是这里开了小插曲。自己搭了个翻墙服务。
https://github.com/shadowsocks/shadowsocks-qt5/wiki (sudo add-apt-repository ppa:hzwhuang/ss-qt5 sudo apt-get update sudo apt-get install shadowsocks-qt5)</description>
    </item>
    
    <item>
      <title>记录一个jQuery的问题</title>
      <link>//liushengxian.github.io/posts/record_a_jquery_bug/</link>
      <pubDate>Wed, 08 Mar 2017 10:37:45 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/record_a_jquery_bug/</guid>
      <description>记录一个jQuery的bug的查找过程 想写这个也是觉得无聊。而且想起了那个巨硬工程师gay里gay气的丑恶嘴脸。虽然是很无聊的一个bug，但是还是拿来记录一下吧。
发现问题 这个问题是由我司的测试小姐姐们提出来的。在IE9上面我们的侧边评论栏的评论无论内容多少都会被折叠。首先到IE9上面去查看DOM结构，发现如下的内嵌style：
很明显，不知道是谁给添加了一个line-height:3px的限制。
定位问题 在PHPStorm里搜索这个评论列表的id，翻来翻去定位到了以下的这个方法：
contentToggle: function () { let $dom = $(&#39;#js_comment_list .txt p&#39;); $dom.each(function (index) { let $domHeight = parseInt($(this).css(&#39;height&#39;)); let $domLineHeight = parseInt($(this).css(&#39;lineHeight&#39;)); //console.info(&#39;line height is &#39;+$domLineHeight+&#39;,index is:&#39;+index); let $domMaxHeight = $domLineHeight * 3; ... 找到问题 看到最后那行的$domLineHeight * 3，我想大概大家也明白了。因为获取的LineHeight可能是没有单位的1，乘以3加上px就添加到了那上面了。所以在代码里添加上面那一行控制台输出测试下，在IE9/Chrome上面分别得到以下结果：
果然如我们所推理的，在IE9下面输出的是不带单位的数字，而我们代码里默认返回值以px为单位的。
JQuery Bug Report
解决问题 我所想的解决方法是，看line-height是否是小于12的值，如果是，则说明是一个相对值，对吧？
但是实际上讨论之后，因为这个comment-box只在这个地方用到。所以干脆把line-height写成了一个固定值 18。
总结问题 总结个毛啊 有啥好总结的。</description>
    </item>
    
    <item>
      <title>勿忘初心&amp;永远幸福的科学</title>
      <link>//liushengxian.github.io/posts/way_to_happiness/</link>
      <pubDate>Tue, 21 Feb 2017 20:30:28 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/way_to_happiness/</guid>
      <description>前言 写的东西实在太少，于是索性把上次写的没有发出来的，两篇一起发了出来。那本书看了，但是，没怎么吸收。
勿忘初心 2017-02-07 虽然有些解释能让自己暂时舒服一些。但是自己心里的结，还是很难打开。等到忙碌暂时停下来，却又会犯起旧病。
那些文艺的耳鼻青年总是有个什么勿忘初心的说法。我想了想，自己之前说过的想法。想要体会更多的事情。
不小心在知乎看到了。别既想享受男生的好，又无法给他们爱情这样的说辞。
前面的千句万句都仿佛沙滩写字，却偏偏这一句让人难过。
突然明白，就算是勉强了。我的焦虑也不会就此停止。
不得不承认，我再努力，她也已经没法给我爱情了。
回到更当初，意气风发地跟XN说，我的目标是体验更多，更好地理解这个世界。
这个目标是多么的美好。不会牵扯那贪婪的占有欲。
让我舍弃那过去的不堪往事，重新擦亮心灵的窗户，去追寻那最初的目标吧。
永远幸福的科学 2017-02-21 过年在家无所事事，总算看了这么一本书。一个美国恋爱心理学家Ty Tashiro所著的。
总结看完之后觉得句句真实没什么不对的却又好像没什么有用的。许多东西都可以用俗语来概括。比如“结婚不会改变一个人”=&amp;gt;“江山易改，本性难移”。所以要慎重选择自己的对象，而不是妄想去改造一个人。“恋爱中的人的家人朋友往往能对恋情的发展做出更符合实际的判断”=&amp;gt;“当局者迷旁观者清”。“经济富足在超越一定水平之后对恋爱满足感的提升是不显著的”=&amp;gt;“但是我现在恐怕连基本的都保障不了吧？”，咳咳。“外貌对于繁育力、恋爱满足感以及实际的能力并没有明显的关系”=&amp;gt;“人不可貌相”。
她从一个安娜的故事开始，讲述了她通过用三个条件来筛选自己的男友的故事。但是等她做完之后，却对这个决定无比的后悔。
为什么我们对自己的BF/GF只能提出三个条件呢？因为通常来说，通过三个足够严格的条件筛选之后，已经有大部分的人被pass掉了。
现实生活中有着如此多既不幸福又不稳定的悲剧，都包含着著名的悲剧剧情中必备的两个因素：美丽与遗失。失去平庸的确会让人沮丧而懊恼，但丧失美好之物则会带来一种绝望的悲恸。陷入热恋的过程是如此的激情澎湃，让人感觉玄虚神奇且命中注定。因此，这美丽的瞬间一旦消失，人们或许就会担心如此玄幻而美好的东西是否还会再来。很可惜，我们每个人其实都或多或少的知道，激烈的感情只是昙花一现，如果把激情作为长久恋情的首要目标，那么我们大多只能得到一些美好的片段和悲情的结局。
根据作者提出的框架。从性格特征、依赖模式、恋爱风格三个方向进行选择是最基础的。总结了一下我之前不自觉的选择，好像都是喜欢比较活泼但是却又能够安静下来的。古灵精怪虽然有时候也是很可爱，但是却始终不是我的菜。至于依赖模式，当然是安全型的最合适，但是我自己还没有达到那个地步。而恋爱风格。我QNMD，我没恋爱过怎么知道。
我希望一年之后我会像丹尼尔一样，勇敢地打出那个电话。即使不知道安妮会不会接那个电话，我也会这样去做。。</description>
    </item>
    
    <item>
      <title>极简主义生活方式</title>
      <link>//liushengxian.github.io/posts/minimalist-lifestyle/</link>
      <pubDate>Tue, 10 Jan 2017 12:03:20 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/minimalist-lifestyle/</guid>
      <description>失业期间养成了买书缓解压力的习惯，但是买了却基本不会看完。上周周末百无聊赖之际总算开始读了一本书，乔舒亚·贝克尔的《极简》，读过之后深以为然，在此推荐给大家。
这本书的作者是在一次整理家庭车库的时候领悟到的极简的意义。而我觉得这本书也的确是最适合已经结婚的家庭进行最佳实践。但是即便是对普通的单身狗其实也是很有意义的。
当他在整理车库时，把自己搞的精疲力竭却发现过了一个上午自己也没有整理好那些东西。而且还导致自己不能兑现对孩子的承诺——打扫完房间就陪孩子玩。当与邻居交谈时受到启发，明白了“拥有”不等于幸福的道理。
想了想要怎么解释这个极简主义，却一时语塞。不知道是不是因为我已经接受这个东西并融入自己了？【没深刻体会的狡辩】。摘录一下乔舒亚的解释：“简而言之，它是刻意地扩展生命中最有价值的东西，并舍弃任何阻碍我们得到它们的东西。尽管我们现在谈论的是清理物品，但最终目的，却是为了是我们能更好地实现生命中最高远的目标”。
书中所写的东西，在我看来是一个十分有生活经验的大叔在教导你。因为有很多遇到的情况是很切合实际、贴近生活的。比如，我看了之后觉得不幸躺枪的：关于清理无意义的关系的那一部分。作者没有从更多的心理学上解释，虽然说法直接干脆，但是我也觉得可以接受了。虐待和过度依赖的关系是最应该被清理的。
不知道乔舒亚·贝克尔之前是什么职业，但是我觉得在中国一般人一定写不出。不是妄自菲薄，而是造就他写书动机的所处的中产阶级生活在中国还不够多。可以说，他的书里把极简的各个基本方面都涉及到并颇有研究了。
在豆瓣上看到一个评论，说是与《怦然心动的人生整理魔法》([日]近藤麻理惠)内容相似。这本书之前在书店看到过，但是没有下手。今天翻了下那本书的目录，发现的确内容有些相似，但是那本书对于整理的细节更为细致一些，而极简里则更多是向你解释，如何让你心里“过得去”，如何让你向别人解释，说服别人。我想那是因为这些道理都是大家生活中切切实实体会到的吧。道理是相通的，但是这本书更适合单身狗，那本书更适合家庭主妇吧233333。</description>
    </item>
    
    <item>
      <title>2016的回顾</title>
      <link>//liushengxian.github.io/posts/year_2016/</link>
      <pubDate>Mon, 02 Jan 2017 16:18:42 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/year_2016/</guid>
      <description>经历了太多，想写一首诗来总结。但是后来还是发现很难做到。
2月份开始的纠结，3月份自行爆炸。
4月份去南京见老哥，想到了很多，学到了很多。
6月底开始跟老板闹离职，终于到8月初交接完离职。
疯狂地玩了两个多月。期间入坑LL神教。【滑稽】
10月底，好运眷顾遇到现在的公司和同事们。
11月份回了一次家。
12月底突然想到了之前的事情。
到昨天，终于释怀了。
我想过了一年，自己的变化还是很显著的。
感谢大家。</description>
    </item>
    
    <item>
      <title>读辜鸿铭《中国人的精神》</title>
      <link>//liushengxian.github.io/posts/about_chinese_spirit/</link>
      <pubDate>Sun, 18 Dec 2016 13:08:08 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/about_chinese_spirit/</guid>
      <description>前言与闲话 因为自己觉得技术太挫了，所以还是多写一点读书的东西。制定了一个小的读书计划，开始就遭遇了一点点小的问题（其实是目前最大的问题），没有在预估的时间内完成。不过还是勉强自己硬是把这本书读完了。总比大学时候那次读社会契约论最后解释不清楚的好，因为那次自己根本就没看完嘛。
这本书写于一战的时候，所以，是对为什么这个自称是最先进的文明的欧洲文明的社会结构进行的反思，并且提出了解决方案，想要解决欧洲文明所遇到的问题，只有通过在中国存在的良民宗教，来解决。
题外话，我意识到并联想到了一些事情。很多人在做评论和提出主张的时候，都没有去根本的了解过事情就妄下断言。我个人是很讨厌这种行为的（也许有时候自己也会这样但是却不自知）。这与了解情况并自信地提出意见完全不是一种情况。我现在做不到后者这种情况，有的时候，会导致不利的状况，但是宁可这样，也不愿意做成前一种状态，来赢取他人的信任。
问题的根源与辜鸿铭所说的春秋大义 辜鸿铭认为，问题的根源所在，在于欧洲人在得到进步，瓦解前一个提供信仰的工具(教会)的同时，没有提供一个可靠、 有效的替代工具。而这种顶替教会的工具，在中国，至少当时的中国，是存在的。包括当时的日本，也是存在的。而且通过对比日俄战争结束之后在两国内引起不同反响，最终俄国导致了一次大战来证明，这种良民宗教的好处。(这段历史不是很清楚，所以在此不置评论)
在他看来一战会打响，是因为平民掌握了更多的发言权，但是却并不具有实际上做出真正正确决策的能力。平民心中的恐惧，导致了战争，只有当民众内心平静的时候，才会使战争从根源上避免。而这种抚慰民众内心的工具，在之前的欧洲，是宗教与对上帝的信仰。在中国则是孔子提出的良民宗教。
个人需要宗教与对科学家对于科学，艺术家对于艺术，哲学家对于哲学的索求相同，是普罗大众所需要的庇护和慰藉。欧洲采用的警察与军队制度来管理，其实本质上还是用到了人的荣誉感，而这种荣誉感，其实完全可以依靠所有人的共同信仰来达到，而不是军国主义。这也许可以解释所谓的李约瑟难题，因为中国的良民宗教足够强大，以至于不需要科学来慰藉个人。
这种所谓的良民宗教，并不是一种确切的西方式的宗教。“与其说中国没有宗教，不如说中国人不需要宗教更为确切”。儒家学说顶替了宗教成为中国公民的信仰。所有人都相信自己帝国的皇帝是尽职尽责，公正无私的。他所说的“春秋大义”，就是忠君的绝对责任。
如果这样说的话，现在恐怕已经没有还维持这种精神的中国人了。因为中国已经没有君主了。但是至少公正自在人心的观念还在中国人的心中留了下来。
在我看来，他们的问题的出发点就不相同。欧洲人所宣扬的，是人人平等，皆有可能。而东方所立足的，是为了解决社会动荡不安的问题，是使公民各司其职，社会有序进行的方法。所谓的自由，说实话，恐怕在这里什么都不是。
辜鸿铭所想到的最终的解决方案，通俗来说，是通过全人类的教育，来实现人人心中皆有良民观念，然后再辅以少量的警察惩治丧心病狂的犯罪分子以维持秩序。当然这全人类的 教育与现在的通识教育根本不同。
中国的女性 君子之道，造端乎夫妇。
在传统中国社会，家庭就是妇女的意义所在。而男人学习忠君爱国思想的开始，就是要学会对自己的妻子负责。
你可能会说，把自己的人生交给别人去负责，是不理智的。但是，实际上人是不可能脱离社会而存在的。你又如何能保证，你所相信的制度，在具体到自己处于不能自理的那一刻的时候，是否真的会能够履行呢。这使我蓦地想起了那个夏天，我跛腿的舅舅所说的，他所相信的，情定胜理。人要活下去还是需要相互之间的感情的。
结束语 可以毫不客气的说，现在的中国人，相当多人，恐怕已经不存在这种辜鸿铭提到的良民精神了。而且对自己国家的历史传统，估计知道的也不是很多了。辜鸿铭的这本《中国人的精神》，本来是向外国人宣扬、介绍中国的春秋大义，但是我也推荐给大家，虽然有些东西未必正确，但这的确是一本不可多得的了解自己民族真实状况的书籍。</description>
    </item>
    
    <item>
      <title>这个奇葩的周末</title>
      <link>//liushengxian.github.io/posts/this_special_weekend/</link>
      <pubDate>Mon, 05 Dec 2016 01:29:08 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/this_special_weekend/</guid>
      <description>奇妙的过程 实际上，时间并没有变得更长或者如何，但是却让人觉得这个周末比以往都长很多，仿佛过了小半个月一样。只有回到现在，夜深人静的时候才会觉得时间慢慢加速起来，要跟之前的快节奏接轨了。
最近一直都还算是处于比较嗨皮的状态。有些问题依旧没有得到解决，可在我乐(ma)观（mu）的忽视之下并不觉得很成问题。
我想造成那种错觉的原因可能是我在这两天生产了以前小半个月才会生产出来的无(lian)效(pian)输(fei)出(hua)。可走到结尾蓦地一回头，发现这好像是一个似曾相识的故事。
多么的相似啊。而结局，仿佛好那么一丁点。所以这次，不会那么难过。
关于那些意识 最近放弃像之前那样打英雄联盟的原因，除了LPL实在太让人失望，自己要融入新的工作之外，还有是自己觉得好像实在不知道如何去进步了。从之前的个人经验来看，只有跟老司机们交流，才能意识到，那些自己之前看不到的东西。
自己之所以这么嗨皮，还是因为最近意识到了很多之前一直视而不见的东西。
【这里应该是最值得总结的地方，但是我不想在这里做】
特殊的开始 大概开始于翻开辜鸿铭那本书的时候。以前会觉得他是一个在某些方面脑子瓦特了的糟老头子。所以是带着一定的挑刺心态去看的这本书。但是翻了几页却觉得他所描述的那种关系是那么的令人向往呢。甚至于乎，我觉得他所解释的三从，好像在某种情况下是理所当然的。 于是我尝试去找一些不同的说法。我想到了受到教育里所描述的那种最先进生产力社会下的理想的关系。对比了一番，我做出了错误的判断和估计，甚至做出了最狂野的计划和妄想。
当然现在事后会想到一些别的了。既然要公平、平等，那就在尽可能多的事情上面都要做到。既然做不到，有的时候还是要讲究实际情况。说到这里我又再一次觉得，长者真是太棒了。所以，每一对，都会有适合自己的状态。而且，总是会有三六九等，都变得理智了，是不可能的。
再扯远一些，就算大家都可以找到合适的状态，但是整个群体的平均认知还是会有一个大概标准。冲突总是会有的。
所以是个奇葩的周末 仿佛是同一个自己，却又完全像是两个不一样的人。
最后作为一个普通2B青年伪装(chong)文(zi)艺(shu)的手段：
那只铅笔 深海里折断的圆规， 嘲笑着那coco。 美味的鸩酒， 磨盘边的驹儿， 以及， 烧不出来的佳肴。 谢谢这一丝丝温润的雨。 深渊里， 也见到了探险者的光芒。 果儿走了出去。 被丢弃的三色卡牌， 涟漪带走了我的思绪。 啊，智叟， 请放心， 城隍知道那天空中的气球。 永远不会再驶向远方， 但至少还有鱼儿。 莫名其妙今天就到了公历生日的这一天，虽然不过公历的，但还是祝自己快乐吧。</description>
    </item>
    
    <item>
      <title>欢迎来到我的新博客</title>
      <link>//liushengxian.github.io/posts/welcome_to_my_new_blog/</link>
      <pubDate>Sun, 06 Nov 2016 11:00:05 +0800</pubDate>
      
      <guid>//liushengxian.github.io/posts/welcome_to_my_new_blog/</guid>
      <description>使用Hugo重新搭建我的个人博客 听从了杨老师的建议，今天用Hugo重新搭建了自己的个人博客。搭建的过程非常之简单，比起jekyll那茫茫多的配置来说，简直就是傻瓜式的。但是我还是花费了三个小时的时间——其中两个半小时用来挑主题跟自己修图片。。。 至于以前blog里的那些个文章，还是算了吧，本来也没有几篇内容，而且东西也太水了。
上午挑了半天的主题，下午想补充下about页面的时候，发现选出来的主题跟杨老师是一样的。。。大概是主题太少了吧。也说明我的审美也还算正常吧= =！
我还挑了下面这几个主题：
1.Artists ——第一眼让我觉得惊艳的主题 跟现在这个theme的样式有些类似，而且中间照片里的文艺大叔一脸惊愕的表情，给这个theme增添了十分的魅力。不过看了demo之后我就放弃了=。=，因为只想找个最方便，简单拿来写blog的主题，而且现在又没有能拿得出手的项目，也没有什么客户评论之类的。很不错的主题，但是不符合我的需求。
2.Highlights ——比较漂亮的一页式主题推荐 也是一个一页式的模板。HTML5，但是讲道理看到有些首次加载那么费劲之后，我觉得做个blog还是简单一点的好，虽然有些特效的确很炫酷，可主要还是要拿来写博客的不是吗。同样因为只是一页的还有Hugo Identity 。上午用的时候死活加载不出来，给人的体验非常差呢。但是不得不承认，加载出来还是很漂亮的。还有一个hugo-smpl-theme,这个的demo页面倒是一直打不开，难道我只是翻墙到了另一个天朝GFW里？
3.Me ——几个让我觉得很合适的主题推荐 这个是我下载好了之后第一个load的主题。跟我之前在jekyll上面使用的主题有些许相似。基本功能也已经做得比较完善，不需要太多的修改了。但是我想吐槽的是，他说的支持的几个默认颜色除了默认的蓝色，其他几个真的是土的不行啊。
hugo-geo 这个是我第二个看中的主题。也是提供了足够的功能。页面配色也很舒服，左侧栏的特效也很棒。要不是我看了主题作者个人网站上那张他自己的大脸的话，也许我就用这个主题了。讲道理，真的是有点不舒服。。。什么，我自己改小吗。。改小了也未必好看呢。。。而且我只是说这个比较合适，但是有更炫酷的，为什么还要用这个呢=w=
ghostwriter 讲道理，这一个主题是最让我挣扎的一个。因为，实在是太简约太geek范儿了！虽然在最终的抉择中，我还是外貌协会了，投靠了Casper,但是这个风格真的超喜欢啊！仅次于外貌协会（的选择）！
其他几个比较简约又比较适合写博客的主题还有： Crisp Herring Cove Sustain 但是总的来说还是没有一张大图占据整个屏幕带来的视觉冲击感更吸引我了= =！
4.一个逗比主题simple-hugo
qnmd,这不就是jekyll的默认主题吗。在这里面有很多是jekyll主题转化过来的！（还有个ghost，估计也是个静态页面生成器）
使用Hugo搭建个人网站时的参考资料： Hugo中文文档 使用hugo搭建个人博客站点 themes 把字调大一些就是好，不仅看着舒服，看起来还觉得写了不少，特爽。</description>
    </item>
    
    <item>
      <title></title>
      <link>//liushengxian.github.io/about-me/</link>
      <pubDate>Sun, 06 Nov 2016 09:34:47 +0800</pubDate>
      
      <guid>//liushengxian.github.io/about-me/</guid>
      <description>关于我 可能这个昵称Misanya看起来总是显得很蹩脚。这个ID的来源也是蛮曲折的，盖因本人贴吧的ID叫做“籼哥”，然后姿势水平不高的同志们就给起了米山哥的叫法。后来又机缘巧合，聊到起英文名，ID【悲伤小恒子】的网友顺口给我起了Misan的名字。后来我又在这个基础之上把名字改为了Misanya，当然，之所以能起到这个名字，绝大部分原因也还是因为Misaya若风【高端黑】。作为一个LOLer，我刚开始还是蛮喜欢若风的。
（起了这么个粗俗的贴吧ID的影响不止如此，比起那些小清新ID，比如【晴天】、【岩岩】，天然就少了被妹子关注的理由。）
我现在居住在上海。是一名正在尝试转型的菜鸟程序猿。
2023.02.02更新 离写这个about-me已经过去6年多了。。。
关于本站 做个人网站一直是我的一个小小心愿。希望能够通过这样的一个小站，分享自己的想法与作品，同时督促自己不断学习、进步。
关于版权 如非特别注明，本站所有作品采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可。</description>
    </item>
    
    <item>
      <title></title>
      <link>//liushengxian.github.io/reading-list/</link>
      <pubDate>Sun, 06 Nov 2016 09:34:47 +0800</pubDate>
      
      <guid>//liushengxian.github.io/reading-list/</guid>
      <description>2017.07.20 《小王子》 已读完 《完美关系的秘密》 已读完 《CSS揭秘》 《Web全栈工程师的自我修养》 </description>
    </item>
    
  </channel>
</rss>
